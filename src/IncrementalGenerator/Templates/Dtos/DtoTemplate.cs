using Microsoft.CodeAnalysis;
using SimpleDto.Generator.Common;
using SimpleDto.Generator.Extensions;
using SimpleDto.Generator.Members;
using SimpleDto.Generator.Parsers;
using SimpleDto.Generator.Resolvers.Abstractions;
using SimpleDto.Generator.Templates.Abstractions;
using System;
using System.Linq;

namespace SimpleDto.Generator.Templates.Dtos;

internal sealed class DtoTemplate : BaseDtoTemplate
{
    public DtoTemplate(DtoTypeDescriptor dtoClass, IPropertiesResolver propertiesResolver)
    {
        Namespace = GetNamespaceFrom(dtoClass.DtoSyntax);

        Name = dtoClass.DtoSyntax.Identifier.ToString();

        Properties = propertiesResolver.ExtractProperties(dtoClass)
            .ToArray();

        TypeModifiers = dtoClass.DtoSyntax.Modifiers
            .Select(x => x.ToString())
            .ToArray();

        IsRecord = dtoClass.DtoSymbol.IsRecord;
    }

    public string Name { get; }
    public PropertyMember[] Properties { get; }
    public string[] TypeModifiers { get; }
    public bool IsRecord { get; }

    public override string Namespace { get; }

    public override string Render()
    {
        return $$"""
            // <auto-generated/>
            #nullable enable
            {{Usings.Select(x => $"using {x};{"\n"}").Join()}}
            namespace {{Namespace}}
            {
            {{(IsRecord ? RenderRecord() : RenderClass())}}
            }

            """;

        string RenderRecord() => $$"""
            {{Constants.Tabulator}}{{TypeModifiers.JoinWithSpace()}} record {{Name}}(
            {{Properties.Select(x => $"{Constants.Tabulator}{Constants.Tabulator}{x.Type} {x.Name}").Join(",\n")}}
            {{Constants.Tabulator}});
            """;

        string RenderClass() => $$"""
            {{Constants.Tabulator}}{{TypeModifiers.JoinWithSpace()}} class {{Name}}
            {{Constants.Tabulator}}{
            {{Properties.Select(x => $"{Constants.Tabulator}{Constants.Tabulator}public {x.Type} {x.Name} {{get; set;}}").JoinWithNewLine()}}
            {{Constants.Tabulator}}}
            """;
    }
}
